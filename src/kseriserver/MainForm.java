/*
 * MainForm.java
 *
 * Created on 17 Ιαν 2012, 11:02:34 μμ
 */
package kseriserver;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

/**
 *
 * @author MeTaXaS4
 */
public class MainForm extends javax.swing.JFrame {

    List<Users> users;
    List<Rooms> rooms;
    String driver = "org.apache.derby.jdbc.EmbeddedDriver";
    String url = "jdbc:derby:kseridb";
    String dbusername = "metaxas4";
    String dbpassword = "&8lZKaMbHx6NJ2";
    Connection conn;
    PreparedStatement statement;
    ResultSet resultSet;

    /** Creates new form MainForm */
    public MainForm() {
        initComponents();
        try {
            connect();
            getUsers();
            getRooms();
            conn.close();
        } catch (Exception e) {
            System.err.println("Got an exception! ");
            System.err.println(e.getMessage());
        }
        fillUsers();
        fillRooms();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomsList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        roomIDlabel = new javax.swing.JLabel();
        seatsLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        firstLabel = new javax.swing.JLabel();
        secondLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersList = new javax.swing.JList();
        signature = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kseri Server");
        setResizable(false);

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setAutoscrolls(true);

        roomsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        roomsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                roomsListValueChanged(evt);
            }
        });
        roomsList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                roomsListKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                roomsListKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(roomsList);

        jLabel1.setText("RoomID :");

        jLabel2.setText("Seats :");

        jLabel3.setText("Status :");

        jLabel4.setText("Password :");

        jLabel5.setText("Player1 :");

        jLabel6.setText("Player2 :");

        roomIDlabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        roomIDlabel.setText("jLabel7");

        seatsLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        seatsLabel.setText("jLabel8");

        statusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        statusLabel.setText("jLabel9");

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setText("jLabel10");

        firstLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstLabel.setText("jLabel11");

        secondLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        secondLabel.setText("jLabel12");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(secondLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(passwordLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(statusLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(seatsLabel))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(roomIDlabel)))))
                .addContainerGap(509, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(roomIDlabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seatsLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(firstLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(secondLabel))))
                .addContainerGap(259, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("rooms", jPanel1);

        usersList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(usersList);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(638, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("users", jPanel2);

        signature.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        signature.setText("Creator : MeTaXaS4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(signature, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signature))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomsListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomsListKeyReleased
        int index = roomsList.getSelectedIndex();
        putRoomData(index);
    }//GEN-LAST:event_roomsListKeyReleased

    private void roomsListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_roomsListKeyPressed
        int index = roomsList.getSelectedIndex();
        putRoomData(index);
    }//GEN-LAST:event_roomsListKeyPressed

    private void roomsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_roomsListValueChanged
        int index = roomsList.getSelectedIndex();
        putRoomData(index);
    }//GEN-LAST:event_roomsListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel firstLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel roomIDlabel;
    private javax.swing.JList roomsList;
    private javax.swing.JLabel seatsLabel;
    private javax.swing.JLabel secondLabel;
    private javax.swing.JLabel signature;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JList usersList;
    // End of variables declaration//GEN-END:variables
    private void connect() throws ClassNotFoundException,
            InstantiationException, IllegalAccessException, SQLException {
        Class.forName(driver).newInstance();
        conn = DriverManager.getConnection(url, dbusername, dbpassword);
        conn.setAutoCommit(true);
    }

    private void getUsers() throws SQLException {
        users = new ArrayList<Users>();
        statement = conn.prepareStatement("select * from APP.USERS");
        resultSet = statement.executeQuery();
        while (resultSet.next()) {
            int id = resultSet.getInt("id");
            String username = resultSet.getString("username");
            String password = resultSet.getString("password");
            String email = resultSet.getString("email");
            int wins = resultSet.getInt("wins");
            int loses = resultSet.getInt("losts");

            Users user = new Users(id, username, password, email, wins, loses);
            users.add(user);
        }
        conn.commit();
    }

    private void getRooms() throws SQLException {
        rooms = new ArrayList<Rooms>();
        statement = conn.prepareStatement("select * from APP.ROOMS");
        resultSet = statement.executeQuery();
        while (resultSet.next()) {
            int id = resultSet.getInt("id");
            int countOfSeats = resultSet.getInt("countOfSeats");
            int status = resultSet.getInt("openclose");
            String password = resultSet.getString("password");
            Rooms room = new Rooms(id, countOfSeats, status, password);
            rooms.add(room);
        }
        conn.commit();
    }

    private void fillUsers() {
        if (users.size() > 0) {
            int i = 0;
            Object[] listData = new Object[users.size()];
            usersList.setListData(listData);
            Iterator it = users.iterator();
            while (it.hasNext()) {
                Users dt = (Users) it.next();
                listData[i++] = dt.getUsername();
            }
            usersList.setListData(listData);
        } else {
            Object[] listData = new Object[1];
            listData[0] = "no users";
            roomsList.setListData(listData);
        }

    }

    private void fillRooms() {
        if (rooms.size() > 0) {
            int i = 0;
            Object[] listData = new Object[rooms.size()];
            roomsList.setListData(listData);
            Iterator it = rooms.iterator();
            while (it.hasNext()) {
                Rooms dt = (Rooms) it.next();
                listData[i++] = dt.getId() + " - " + dt.getCountOfSeats();
            }
            roomsList.setListData(listData);
        } else {
            Object[] listData = new Object[1];
            listData[0] = "no rooms";
            roomsList.setListData(listData);
        }
    }

    private void putRoomData(int index) {
        roomIDlabel.setText(""+rooms.get(index).getId());
        seatsLabel.setText(""+rooms.get(index).getCountOfSeats());
        statusLabel.setText(rooms.get(index).getStatuss());
        passwordLabel.setText(rooms.get(index).getPassword());
        firstLabel.setText("");
        secondLabel.setText("");
    }
}
